using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace вычи1.Tests
{
	[TestClass()]
	public class PolynomialTests
	{
		[TestMethod()]
		public void ToStringTest()
		{
			#region test ax^2+bx+c
			string[] ss = new string[]
			{
				"-2x^2 - 2x - 2", "-2x^2 - 2x - 1","-2x^2 - 2x","-2x^2 - 2x + 1","-2x^2 - 2x + 2",
				"-2x^2 - x - 2", "-2x^2 - x - 1", "-2x^2 - x", "-2x^2 - x + 1", "-2x^2 - x + 2",
				"-2x^2 - 2", "-2x^2 - 1", "-2x^2", "-2x^2 + 1", "-2x^2 + 2",
				"-2x^2 + x - 2", "-2x^2 + x - 1", "-2x^2 + x", "-2x^2 + x + 1", "-2x^2 + x + 2",
				"-2x^2 + 2x - 2", "-2x^2 + 2x - 1", "-2x^2 + 2x", "-2x^2 + 2x + 1", "-2x^2 + 2x + 2",

				"-x^2 - 2x - 2", "-x^2 - 2x - 1","-x^2 - 2x","-x^2 - 2x + 1","-x^2 - 2x + 2",
				"-x^2 - x - 2", "-x^2 - x - 1", "-x^2 - x", "-x^2 - x + 1", "-x^2 - x + 2",
				"-x^2 - 2", "-x^2 - 1", "-x^2", "-x^2 + 1", "-x^2 + 2",
				"-x^2 + x - 2", "-x^2 + x - 1", "-x^2 + x", "-x^2 + x + 1", "-x^2 + x + 2",
				"-x^2 + 2x - 2", "-x^2 + 2x - 1", "-x^2 + 2x", "-x^2 + 2x + 1", "-x^2 + 2x + 2",

				"-2x - 2", "-2x - 1","-2x","-2x + 1","-2x + 2",
				"-x - 2", "-x - 1", "-x", "-x + 1", "-x + 2",
				"-2", "-1", Polynomial.zero, "1", "2",
				"x - 2", "x - 1", "x", "x + 1", "x + 2",
				"2x - 2", "2x - 1", "2x", "2x + 1", "2x + 2",

				"x^2 - 2x - 2", "x^2 - 2x - 1","x^2 - 2x","x^2 - 2x + 1","x^2 - 2x + 2",
				"x^2 - x - 2", "x^2 - x - 1", "x^2 - x", "x^2 - x + 1", "x^2 - x + 2",
				"x^2 - 2", "x^2 - 1", "x^2", "x^2 + 1", "x^2 + 2",
				"x^2 + x - 2", "x^2 + x - 1", "x^2 + x", "x^2 + x + 1", "x^2 + x + 2",
				"x^2 + 2x - 2", "x^2 + 2x - 1", "x^2 + 2x", "x^2 + 2x + 1", "x^2 + 2x + 2",

				"2x^2 - 2x - 2", "2x^2 - 2x - 1","2x^2 - 2x","2x^2 - 2x + 1","2x^2 - 2x + 2",
				"2x^2 - x - 2", "2x^2 - x - 1", "2x^2 - x", "2x^2 - x + 1", "2x^2 - x + 2",
				"2x^2 - 2", "2x^2 - 1", "2x^2", "2x^2 + 1", "2x^2 + 2",
				"2x^2 + x - 2", "2x^2 + x - 1", "2x^2 + x", "2x^2 + x + 1", "2x^2 + x + 2",
				"2x^2 + 2x - 2", "2x^2 + 2x - 1", "2x^2 + 2x", "2x^2 + 2x + 1", "2x^2 + 2x + 2"
			};
			for (int i = -2; i < 3; i++)
				for (int j = -2; j < 3; j++)
					for (int k = -2; k < 3; k++)
						S(ss[25 * (i + 2) + 5 * (j + 2) + (k + 2)], k, j, i);
			#endregion

			S("-1.05x^3 - 0.01x^2 - 123x",
				0, -123, -0.01, -1.05);
			S("-x^3",
				0, 0, 0, -1);
			S("0.01x^3 + x^2 + x + 1999.2345678",
				1999.2345678, 1, 1, 0.01);
			S("0.01x^3 + 0.2345678",
				0.2345678, 0, 0, 0.01);
			S("0.01x^3 - 1999.2345678",
				-1999.2345678, 0, 0, 0.01);
			S("-0.01x^3 - 1999",
				-1999, 0, 0, -0.01);
			S("0.01x^3 - 1",
				-1, 0, 0, 0.01);
			S("0.01x^3 + 0.01",
				0.01, 0, 0, 0.01);
			S("-0.0001x^3",
				0, 0, 0, -0.0001);
			S("0.00000001x^2",
				0, 0, 0.00000001);
		}
		void S(string s, params double[] args) =>
			Assert.AreEqual(s, new Polynomial(args).ToString());
	}
}